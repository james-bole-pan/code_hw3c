import matplotlib.pyplot as plt

# mutation before crossover 9 rounds
fitnesses = [
    [0.42168979231299947, 0.28797137296643205, 0.36965542757200076, 1.1194377223880325, 0.7137882963371562, 0.2433559547649426, 0.1378799770250349, 0.5186529607509125, 0.2879290693457784, 0.4439665202792681],
[0.5200859106822152, 0.0010594928174193375, 0.3771293418616411, 0.0003052436687969538, 0.21130670122504314, 0.0007698413471954347, 0.0002873297985666929, 0.0002737185870543129, 0.00134767673903166, 8.016852163124061e-05],
[1.521893954563314, 0.16350382006731756, 0.30243117443525486, 0.00010191297108519291, 0.0010304579571352374, 0.0001780887444814402, 0.0002277468068113078, 7.664197468709209e-05, 0.0033682139864639788, 0.2717584295067938],
[0.0001082986149107442, 0.9761775637086354, 0.2610634167178842, 0.4868105098073092, 0.6283420464149172, 0.8426523106997746, 0.2100763043195312, 0.050150880970693305, 0.22405776010014097, 0.1328682291264571],
[0.5412739331575878, 0.0018884801252330241, 0.5187390907750058, 0.004443264645760633, 0.00030278860680557884, 0.00015538998319498826, 0.00010630590148230854, 0.00024940830294002214, 0.12000426632824632, 0.9468267451342894],
[0.29062301902957605, 0.7790343360916592, 0.956442540786781, 6.0171585626200525e-05, 0.6981646735208856, 1.1786063200143309, 7.253287149179812e-05, 0.29039802457527447, 0.5331174966993304, 0.08853516524388054],
[0.2239634167386745, 0.5659231977872707, 0.00016973143018036532, 0.6778743225324609, 0.6960512053120007, 0.002373260648842438, 0.4901276137892559, 0.0007769526618203253, 5.993620534692574e-05, 0.48035309639330104],
[0.6531914482083344, 6.0138102942517675e-05, 7.783036459772327e-05, 0.08117281895296785, 0.48920863475900234, 0.612557361424273, 1.885724314144809e-05, 0.007608463594706565, 0.6378563603315497, 0.31150295220096774],
[0.21159068579617382, 0.6434612031741859, 0.24710034942317363, 0.040804705147360745, 7.244228645217129e-05, 0.00010334258213406652, 0.5599585824954665, 0.25214825578057576, 0.0001735445929815712, 0.23675050052779845],
[0.13197322641009449, 0.7815867896127441, 0.5138392553099353, 7.30363919194398e-05, 0.15546040404687728, 4.778497723863677e-05, 0.38289946865281854, 0.6253964241688037, 0.6438798347831509, 8.995490127215795e-06],
[0.003583456164007727, 0.002585993124542149, 0.0001253076947253527, 0.37699006902102256, 0.9369777418789611, 0.8444592175658384, 0.23573195760840748, 0.1635635902926104, 0.6532778121012961, 0.0005219659910811836],
[0.27356764853816995, 0.0004387846501929485, 0.00010455213112635343, 0.00012918071901111514, 0.5638668724047007, 9.977726787694027e-05, 0.00012488068656611848, 0.7586871239767308, 0.42478284715084963, 0.7718333689047261],
[0.699894068320695, 0.4116505990054362, 0.775655917612314, 0.24808721264347705, 0.000494497070081709, 0.00022582242004610628, 0.09206343553783329, 0.00019131813649707317, 0.00025657662782910566, 6.73410672811966e-05],
[0.003158889131848223, 0.39777787930403563, 1.957355914819138e-05, 0.38832628286065834, 0.002414679221512272, 0.521217047385515, 0.784750510373456, 0.44432187564882486, 0.00014821539719677324, 0.9320150428581141],
[0.00013811300018114471, 5.680091153010416e-05, 2.6069369136653696e-05, 0.3641183915157311, 0.000782956746229182, 0.534545699163727, 0.4804023237427116, 7.752900026401922e-05, 0.00011186033301584639, 0.5181959271085241]

]

fig, ax = plt.subplots()

for i, sublist in enumerate(fitnesses):
    ax.scatter([i]*len(sublist), sublist, color='purple')

# Set the labels and title
ax.set_xlabel('Generations')
ax.set_ylabel('Fitness')
ax.set_title('Dot Plot of Evolutionary Algorithm')
ax.legend()

# Display the plot
plt.show()

# calculate the average distance between the points for each generation
# for each sublist, we iterate through every possible pair of points and calculate the distance between them (absolute value)
average_distances = []
for sublist in fitnesses:
    total_distance = 0
    for i in range(len(sublist)):
        for j in range(i+1, len(sublist)):
            total_distance += abs(sublist[i] - sublist[j])
    average_distances.append(total_distance / (len(sublist) * (len(sublist)-1) / 2))
plt.plot(average_distances)
plt.xlabel('Generation')
plt.ylabel('Average Distance between members of the generations')
plt.title('Diversity of the Population')
plt.show()
